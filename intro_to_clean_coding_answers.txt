1. In your own words, explain what clean code is and why it is important.

Clean code is the process of writing code this is easily readable and maintable by you and other developer who may see/edit your code.


2. think about another commonly used object that relies on computers and explain what would happen if the code was not created to an acceptable standard.

Traffic lights also used computers and if the code was not created to an acceptable standard, accidents can be caused and pediestrians could be injured or killed.


3. Would you consider the following to be clean code? Explain why or why not. If not, refactor the code.

No,the function does not have a proper name,  the naming of the variables are not clear enough, there are no indentations and there are too many comments.

function convertDegrees (Tempdegree, tempType) 
  IF tempType = 'F' THEN
     SET newTemp to (tempDegree-32) * (5/9)
     PRINT newTemp
  ELSE IF y='C'THEN
     Set newTemp to tempDegree * 1.8000 + 32.00
     PRINT newTemp
  END IF
END FUNCTION


4. Would you consider the following to be clean code? Explain why or why not. If not, refactor the code.

I would say this is clean code

5. Using pseudocode, refactor the code for the following examples using the principles you have learned in this checkpoint.

a- 
FUNCTION checkoutCustomer(SubTotal, discountRate, paymentType)
 Set finalTotal = subTotal * discountRate + (subTotal * Tax)
 PRINT "Your total due is" + finalTotal
 IF paymentType = CASH THEN
  CALL getPayment RETURNING amount
  PRINT "Change due: " + amount - finalTotal
  ELSE
  PRINT "Your credit card has been charged: " + finalTotal
  END IF
END FUNCTION


b-
FUNCTION CheckoutBook(book, guest)
 IF guest.accountActve AND NOT(guest.hasOverdueBooks) AND guest.outstandingFees = 0 THEN
 APPEND book to guest.books
 Set book.status
 PRINT "Your books have been issues."
 ELSE
 PRINT "Unable to check out book."
 END IF
END FUNCTION


c-
CLASS BankBalance

 FUNCTION displayBalance
    PRINT balance
 END FUNCTION

END CLASS

CLASS BankDeposit

 FUNCTION deposit(amount)
    SET balance to balance + amount
 END FUNCTION

END CLASS

CLASS BankWithdraw

 FUNCTION withdraw(amount)
     IF balance > amount THEN
       SET balance to balance - amount
     END
 END FUNCTION

END CLASS

CLASS CreditCardOffer

 FUNCTION creditCardOffer
     IF NOT(customer.hasCreditCard) THEN
         CALL offerCreditCard
     END
 END FUNCTION

END CLASS

CLASS StatusCheck

 FUNCTION checkStatus
     IF NOT(customer.hasCheckingAccount) THEN
         CALL offerCheckingAccount
     END
 END FUNCTION

END CLASS


6. Square Given an array of integers, find out whether the sum of the integers is a perfect square. If it is a perfect square, return the square root, otherwise return the sum

function caculateSum(arry) {
  var sum = arry.reduce((total, num) => total + num)
  if (Math.sqrt(sum)%1 === 0) {
    return Math.sqrt(sum);
  }
  return sum;
} 


7. Duplicate Given an array of integers, find out whether the array contains any duplicate elements. The function should return true if any value appears at least twice in the array, and false if every element is distinct.

function duplicate (arry) {
for (var i = 0; i < arry.length; i++) {
    for (var k = i + 1; k < arry.length; k++) {
        if (arry[i] == arry[k]) {
            return true;
        }
    }
  }
  return false;
}

